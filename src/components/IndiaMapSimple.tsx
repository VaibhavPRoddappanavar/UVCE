import React, { useState } from 'react';
import { indiaStatesData } from '../data/indiaStatesData';
import './IndiaMap.css';

const IndiaMap: React.FC = () => {
  const [selectedState, setSelectedState] = useState<string | null>(null);
  const [hoveredState, setHoveredState] = useState<string | null>(null);
  const [tooltip, setTooltip] = useState<{ x: number; y: number; visible: boolean }>({
    x: 0, y: 0, visible: false
  });

  // State code mapping for the SVG paths (IN-XX format to our state keys)
  const stateCodeMapping: { [key: string]: string } = {
    'IN-AP': 'andhraPradesh',
    'IN-AR': 'arunachalPradesh', 
    'IN-AS': 'assam',
    'IN-BR': 'bihar',
    'IN-CT': 'chhattisgarh',
    'IN-GA': 'goa',
    'IN-GJ': 'gujarat',
    'IN-HR': 'haryana',
    'IN-HP': 'himachalPradesh',
    'IN-JH': 'jharkhand',
    'IN-KA': 'karnataka',
    'IN-KL': 'kerala',
    'IN-MP': 'madhyaPradesh',
    'IN-MH': 'maharashtra',
    'IN-MN': 'manipur',
    'IN-ML': 'meghalaya',
    'IN-MZ': 'mizoram',
    'IN-NL': 'nagaland',
    'IN-OR': 'odisha',
    'IN-PB': 'punjab',
    'IN-RJ': 'rajasthan',
    'IN-SK': 'sikkim',
    'IN-TN': 'tamilNadu',
    'IN-TG': 'telangana',
    'IN-TR': 'tripura',
    'IN-UP': 'uttarPradesh',
    'IN-UT': 'uttarakhand',
    'IN-WB': 'westBengal',
    'IN-AN': 'andamanNicobar',
    'IN-CH': 'chandigarh',
    'IN-DN': 'dadraNagarHaveli',
    'IN-DL': 'delhi',
    'IN-JK': 'jammuKashmir',
    'IN-LA': 'ladakh',
    'IN-LD': 'lakshadweep',
    'IN-PY': 'puducherry'
  };

  const selectedStateData = selectedState ? indiaStatesData[selectedState as keyof typeof indiaStatesData] : null;

  const handleStateClick = (stateCode: string) => {
    const stateKey = stateCodeMapping[stateCode];
    if (stateKey && indiaStatesData[stateKey as keyof typeof indiaStatesData]) {
      setSelectedState(stateKey);
    }
  };

  const handleStateMouseEnter = (stateCode: string, event: React.MouseEvent) => {
    const stateKey = stateCodeMapping[stateCode];
    if (stateKey && indiaStatesData[stateKey as keyof typeof indiaStatesData]) {
      setHoveredState(stateKey);
      const containerRect = (event.currentTarget.closest('.india-map-container') as Element)?.getBoundingClientRect();
      if (containerRect) {
        setTooltip({
          x: event.clientX - containerRect.left,
          y: event.clientY - containerRect.top,
          visible: true
        });
      }
    }
  };

  const handleStateMouseLeave = () => {
    setHoveredState(null);
    setTooltip(prev => ({ ...prev, visible: false }));
  };

  const getStateColor = (stateCode: string) => {
    const stateKey = stateCodeMapping[stateCode];
    if (hoveredState === stateKey && indiaStatesData[stateKey as keyof typeof indiaStatesData]) {
      return indiaStatesData[stateKey as keyof typeof indiaStatesData].color;
    }
    return '#f97316'; // Default orange color
  };

  const closeModal = () => {
    setSelectedState(null);
  };

  return (
    <div className="w-full py-16 bg-gradient-to-br from-orange-50 via-yellow-50 to-red-50">
      {/* Title Section */}
      <div className="map-title mx-auto max-w-4xl mb-8">
        <h2>🇮🇳 Explore India's Rich Heritage 🎨</h2>
        <p>Click on any state to discover its unique art forms and cultural traditions</p>
        <div className="decorative-border mt-4"></div>
      </div>

      {/* Map Container */}
      <div className="india-map-container relative flex justify-center">
        {/* Embedding the SVG directly with all state paths from the original file */}
        <svg
          width="800"
          height="800"
          viewBox="0 0 566 707"
          className="india-map-svg max-w-full h-auto cursor-pointer"
          style={{ filter: 'drop-shadow(2px 4px 8px rgba(0,0,0,0.1))' }}
        >
          {/* All Indian States - using complete paths from the original SVG file */}
          
          {/* Andaman and Nicobar Islands */}
          <path
            id="IN-AN"
            title="Andaman and Nicobar Islands"
            fill={getStateColor('IN-AN')}
            stroke="#ffffff"
            strokeWidth="1.5"
            className="state-path cursor-pointer hover:opacity-80 transition-all duration-200"
            onClick={() => handleStateClick('IN-AN')}
            onMouseEnter={(e) => handleStateMouseEnter('IN-AN', e)}
            onMouseLeave={handleStateMouseLeave}
            d="m 239.69,615.56347 -0.836,-0.0544 -0.215,0.78686 0.801,0.21258 0.25,-0.94504 z m 1.325,-2.24369 -0.296,1.04477 0.54,0.49569 0.459,-0.62162 -0.703,-0.91884 z m -0.906,-3.53022 -0.527,0.84428 0.463,0.28713 0.771,-0.54808 -0.707,-0.58333 z m 5.123,-5.45174 0.258,0.79391 0.515,0.17531 0.051,-1.09918 -0.824,0.13096 z m -6.003,-1.20295 0.516,0.48762 0.455,-0.13197 -0.149,-0.71129 -0.822,0.35564 z m 9.088,-1.01354 -1.004,0.26598 -0.243,0.75966 0.671,0.68409 0.954,-0.57025 -0.378,-1.14048 z m -7.089,-1.40848 0.353,0.55111 0.538,-0.0705 -0.891,-0.48057 z m 4.898,-0.3365 -0.73,0.60651 0.423,0.82817 0.736,-0.7657 -0.429,-0.66898 z m -1.999,-1.22411 0.251,1.23821 0.651,-0.18336 -0.29,-0.82111 -0.612,-0.23374 z m 5.193,-0.0484 -0.371,0.35967 0.354,0.96216 0.507,-0.53498 -0.49,-0.78685 z m -2.686,-1.4115 0.33,0.72741 0.423,-0.15717 -0.258,-0.73648 -0.495,0.16624 z m -4.035,-1.7198 0.515,0.48158 0.307,-0.36572 -0.822,-0.11586 z m 4.632,0.007 -0.292,0.73245 0.624,0.55413 0.223,-0.66193 -0.555,-0.62465 z m -2.089,-1.04274 0.242,0.5652 0.584,-0.19042 -0.826,-0.375 z m 5.652,-2.53184 -0.245,0.56521 0.439,0.44128 0.355,-0.5652 -0.549,-0.44129 z"
          />

          {/* Andhra Pradesh */}
          <path
            id="IN-AP"
            title="Andhra Pradesh"
            fill={getStateColor('IN-AP')}
            stroke="#ffffff"
            strokeWidth="1.5"
            className="state-path cursor-pointer hover:opacity-80 transition-all duration-200"
            onClick={() => handleStateClick('IN-AP')}
            onMouseEnter={(e) => handleStateMouseEnter('IN-AP', e)}
            onMouseLeave={handleStateMouseLeave}
            d="m 316.48,584.94247 0.793,0.007 -0.091,-1.13848 -1.719,-0.64076 -0.486,-1.16064 0.877,0.18135 -0.285,-0.93193 1.078,0.42113 0.377,-0.403 1.112,0.21762 0,0 -0.343,-8.09121 -1.698,-4.46623 0.907,-5.23496 0,0 -0.39,-0.68308 -0.62,0.33852 -0.049,-0.77275 -0.963,0.47655 -0.937,-0.58637 0.499,-0.83622 0.681,0.63674 0.199,-0.35464 -0.395,-0.79592 -0.583,-0.16826 0.437,-0.75965 -1.144,-0.30527 0,0 0,0 0,0 0.725,-0.70626 0.561,0.89768 0.604,-0.36269 0.375,0.31736 -0.772,0.25792 0.444,1.28959 1.277,-1.20698 0.832,0.49267 0,0 0.988,-2.66382 5.699,-8.68463 2.047,-6.72907 0.924,-7.65899 0.959,-2.88144 -0.687,-3.21392 0,0 0.001,1.1425 -0.756,-0.42516 -0.956,-1.89007 -1.638,-0.0433 -1.73,-1.26642 -1.577,0.17228 -0.083,0.42113 0.891,0.17833 0.069,0.37378 -0.631,-0.0705 -0.22,0.60953 -0.702,0.17632 0.029,0.71935 -0.644,0.29217 0.441,0.65085 -0.587,0.82111 -1.556,0.70021 -1.065,-0.0191 -0.429,0.47957 -0.538,-0.44632 -0.687,0.6579 1.332,1.04981 -0.848,0.61457 -0.451,-0.57931 -0.714,0.31132 0.153,-0.57025 -0.476,0.0957 -0.1,-1.12941 -1.848,0.78686 -0.66,-0.46849 -0.271,-0.94604 -2.238,-0.27001 -1.136,0.44229 1.056,0.46748 -0.297,1.49009 0.529,-0.38083 0.197,0.28109 -0.5,0.17732 0.045,0.45337 -1.591,0.52491 0.142,0.71633 -0.976,0.70625 -0.849,-0.95309 -1.027,0.12191 -0.001,0.68107 -0.615,0.41508 -0.758,1.66338 -1.751,-0.14709 -1.873,-1.34098 -1.365,0.1884 -0.438,0.70223 0.653,0.35463 -0.895,-0.0232 -0.123,-1.42964 -2.722,0.87753 -0.912,-0.23071 -0.182,1.11328 -0.893,-0.29117 -0.784,0.83925 0.691,1.28657 -0.439,-0.004 -0.916,3.18974 -0.762,0.57729 0.044,1.25333 -0.487,0.12694 -0.176,-0.51281 -0.114,0.0373 -0.358,-0.0363 -0.102,0.86241 -0.647,0.0222 0.041,0.96317 -1.911,0.11989 -1.63,-0.88257 -0.545,-0.83622 1.561,0.22669 0.782,-0.72742 -0.137,-0.80398 0,0 0.028,0.77175 -0.937,0.0191 -0.626,0.84932 -1.093,0.39393 -0.564,-0.61054 -0.946,0.60853 0.3,2.24067 0.794,-0.31837 0.897,0.63875 0.268,-0.30023 1.606,0.53699 0.795,1.1153 1.279,0.74253 0.601,-0.10579 0.042,1.26642 -1.963,1.32285 0.133,1.07399 0.73,-0.48259 2.834,0.36572 1.547,-0.97626 0.599,0.48057 -0.72,1.37423 0.996,0.49569 -0.034,1.57572 1.159,0.10881 -1.799,0.23475 -1.201,2.28802 3.525,1.33091 0.479,1.15459 1.002,0.16624 0.193,0.62061 -0.879,2.03616 0.358,0.97727 -1.416,0.0655 0.518,0.88056 -0.469,3.62598 0.67,1.17675 -0.412,1.37222 0.395,0.37478 0.539,-0.26497 -0.042,0.48965 0.904,0.9007 1.367,0.34355 1.418,-0.84125 0.279,-0.79492 2.326,-1.29463 1.239,0.12795 -0.16,0.73446 0.755,1.10926 -0.084,0.70525 0.71,0.28411 -0.433,1.87596 -1.507,0.56621 1.262,1.53845 0.229,1.42259 -0.509,0.22467 -0.745,1.63416 0.514,0.36068 -0.309,0.73346 0.524,0.55312 -0.506,0.18336 -0.033,1.23821 -0.383,0.13098 -0.796,2.32832 0.922,0.0393 1.237,0.8332 1.032,-0.59644 0.429,0.63371 0.337,-0.67703 0.202,1.46087 0.957,0.6317 -0.37,0.97324 -0.928,0.41811 -0.48,2.19131 -0.569,0.0101 -0.362,0.77577 0,1.74197 -0.632,0.62968 0.317,0.76771 -1.17,1.15762 -0.288,1.1022 -1.045,0.5239 1.005,1.37523 0.005,0.66293 0.508,-0.0353 0.801,1.23318 -0.593,1.77118 -0.798,0.86342 -0.444,-0.0544 2.299,4.24055 -0.369,0.76469 -1.278,0.16926 0.481,1.17877 -1.563,1.25333 0.52,1.39941 -0.79,-0.22165 -0.533,0.52692 0,0 4.595,3.7489 4.919,0.94 0.518,-1.25132 3.582,-0.88156 1.198,-1.50016 5.506,-2.5933 -0.366,-0.20553 0.325,-0.83521 1.367,-1.63618 0.174,-1.94245 -0.884,0.15919 0.175,-1.49009 1.349,-1.96059 1.273,-0.0997 -0.901,-0.58939 -0.622,0.10579 0.238,-2.34445 0.844,-1.63718 4.221,-3.23608 3.506,-0.41207 1.657,-0.56017 -0.314,-0.34254 0.326,-0.39595 1.268,0.0473 0.192,-0.39494 3.047,-1.01455 1.715,-0.3365 2.902,0.26598 2.023,-0.46043 -2.657,-0.39997 -2.599,-2.24672 -0.861,-1.57069 0.762,-2.70815 1.244,-2.14295 2.675,-3.10712 0.697,-1.65431 2.35,-2.24571 -0.814,-1.15258 0.012,-1.11227 1.378,-2.47844 1.901,-1.1949 7.478,0.88761 1.942,-0.006 0.913,-0.44934 -0.587,-11.02403 z"
          />

          {/* Rajasthan */}
          <path
            id="IN-RJ"
            title="Rajasthan"
            fill={getStateColor('IN-RJ')}
            stroke="#ffffff"
            strokeWidth="1.5"
            className="state-path cursor-pointer hover:opacity-80 transition-all duration-200"
            onClick={() => handleStateClick('IN-RJ')}
            onMouseEnter={(e) => handleStateMouseEnter('IN-RJ', e)}
            onMouseLeave={handleStateMouseLeave}
            d="m 30.331,219.36447 1.069,0.35564 0.444,-1.01354 1.45,0.24281 0.804,1.16365 0.756,-0.17429 0.521,0.80499 2.409,0.94906 1.951,-0.27202 1.179,-0.72742 0.159,0.49065 0.379,-0.31031 0.53,0.6579 0.943,-0.0222 1.12,1.42863 0.817,-0.20453 0.925,0.38991 -0.214,0.79995 1.157,-0.51383 0.261,1.73894 -0.545,0.85436 0.245,-0.19344 0.139,0.73548 0.473,-0.0161 0.845,1.13343 -0.261,1.10724 1.639,0.26396 -0.199,0.64782 -0.637,-0.0161 -0.21,1.29061 1.193,0.41509 -0.379,0.23071 0.229,0.44632 -0.686,0.0957 -0.215,0.92488 -0.342,-0.35565 -0.632,0.48259 0.419,0.79794 -0.767,-0.0322 -0.115,0.8604 -0.786,0.0464 0.488,0.94704 -1.215,0.36976 1.267,1.33997 -1.232,1.04679 -0.309,2.04421 -1.113,0.78585 0.132,1.05787 -0.755,0.22769 0.32,1.42964 -1.06,-0.72137 -0.26,0.27807 0.49,0.0695 -0.037,0.36874 -1.543,1.17172 1.351,1.73693 -0.128,1.16164 -2.683,0.70827 -0.595,0.66193 -0.837,-0.54506 -0.575,0.57629 -1.987,-0.41711 -0.65,0.70424 -0.542,-0.27706 -0.432,0.72036 0.252,1.28456 -0.907,0.67905 -0.624,-0.15011 -0.362,1.2503 -0.728,0.60853 0.749,0.88458 -0.487,0.59644 0.777,0.30225 0.197,1.20396 0.905,0.65588 -0.26,0.5239 1.279,0.6055 -0.589,0.36069 0.515,0.57225 -0.996,-0.0403 -1.415,0.9672 -0.005,2.06537 -3.394,2.72427 -0.033,0.57025 0.946,1.01757 0.238,1.5183 1.007,1.85278 -0.2,2.5127 -0.82,0.81607 1.044,1.07399 -0.057,0.66394 1.969,1.41856 -0.732,1.29262 1.123,1.24426 1.154,-0.50879 1.478,-2.21548 1.53,0.84932 1.898,2.57717 0.623,0.24382 0.698,-0.44532 0.286,0.33449 0.301,-0.44229 0.658,1.8004 0.457,-0.69114 1.368,-0.29419 0.605,-1.79839 1.237,-1.20597 0.367,-2.02003 -1.587,-0.58636 0.11,-0.78484 0.354,0.37579 0.746,-0.28713 -1.772,-3.29049 -2.195,1.075 -0.574,-0.27404 -0.197,-1.26945 0.677,-1.01958 -0.164,-2.09761 0.335,-0.46244 -0.337,-1.07198 -2.011,-0.94805 -0.308,-0.96821 -0.662,-0.47755 0.416,-2.23564 -0.937,-0.84226 -0.598,-3.72573 -1.505,-0.81809 -0.893,0.54002 -0.559,-0.41912 0.277,-0.35967 0.554,0.25892 0.526,-0.71532 0.169,0.4574 0.52,-0.0564 0.343,-0.46445 -0.342,-0.84529 1.069,0.25691 -0.316,-1.01656 0.57,0.0836 0.317,-0.57931 0.526,0.24583 0.505,-0.87149 0.692,-0.0876 0.327,0.43927 -0.676,0.58032 -0.264,-0.37681 0.029,0.74555 1.07,0.2146 0.097,0.59845 1.062,-0.12594 -0.445,-1.26138 1.461,-0.41106 -1.211,-0.0796 -0.636,-0.68409 0.149,-0.86847 0.518,0.57025 1.535,0.2428 0.332,0.26296 -0.667,0.18739 0.428,0.3214 0.479,-0.806 -0.604,-0.99541 0.998,-0.33247 -0.035,-0.75966 0.754,-0.0544 0.136,0.41912 0.291,-0.42819 0.233,0.66394 -0.534,0.2418 0.404,0.94604 -0.679,0.76973 0.542,0.43121 0.649,-0.24482 0.385,1.45986 -1.044,0.56218 -0.758,-0.54606 0.81,-0.0423 0.381,-0.53498 -1.561,0.29117 -0.775,0.82413 0.12,0.45942 -1.079,0.40703 -0.182,0.39897 0.595,-0.0514 -0.126,0.66998 0.756,0.96921 0.727,-2.6749 1.07,0.2962 0.528,-0.42214 0.36,1.50117 -0.615,0.52189 -0.671,-0.27102 -0.354,0.67099 -0.331,-0.23978 -0.084,2.08149 1.601,-1.25635 0.994,0.56218 -0.024,-0.87652 -0.492,-0.25893 0.708,-0.74353 0.149,0.66696 0.928,0.52189 -0.667,0.90775 -0.059,1.00548 0.446,0.11587 0.863,-1.26038 0.756,0.65789 -0.263,0.47453 0.447,0.76268 1.049,-0.16019 -0.262,-0.57125 0.378,-0.20352 0.451,0.86544 0.67,-0.0605 0.107,-0.5652 -0.62,-0.17531 0.46,-0.29217 0.488,0.17832 0.019,0.72238 0.903,-0.25993 0.237,-0.43021 -0.748,-1.05485 -0.109,-1.17574 1.235,1.09615 0.301,-0.31131 -0.374,-0.3627 0.23,-0.9944 -0.629,0.25187 -0.467,-0.65789 -0.593,0.43725 0.015,-0.9007 0.724,-0.69518 1.072,0.16624 -0.317,0.90473 0.464,0.66495 0.303,-0.67099 1.002,0.81406 0.881,-0.57226 0.691,0.31434 -0.653,0.0202 -0.673,1.02966 0.328,0.29016 -0.693,0.0876 -0.539,0.89264 0.32,1.31579 0.335,-0.59341 0.333,0.73144 0.781,-0.62364 -0.164,0.88257 0.614,0.31434 1.584,-2.19635 0.506,0.70122 0.274,-0.17228 -0.103,0.54002 3.093,-0.28815 2.309,1.05082 -0.173,-0.80801 0.511,-0.39192 -0.522,-2.0835 1.157,-0.38789 0.231,0.54506 0.61,-0.89264 1.134,0.0756 0.502,-1.72887 1.31,-0.29418 0.837,0.404 1.352,-1.04981 0.126,-0.75562 1.074,0.26195 0.223,-0.55312 1.149,0.96216 -0.14,2.284 1.548,1.19186 0.44,-0.12694 0.517,1.59588 -1.516,0.67804 -1.766,2.65476 1.04,0.62666 0.884,-0.52994 0.488,0.37781 -0.343,-1.11127 1.568,-0.56319 0.618,0.86544 0.502,-0.0141 0.121,-1.02462 -0.499,-0.29419 0.698,0.0282 0.71,0.77275 0.399,-0.5501 0.928,0.44532 -0.255,-1.92432 0.791,0.74051 -0.65,0.43725 1.151,0.69417 0.481,-0.17027 -0.12,0.63976 1.123,-0.40904 1.02,0.23475 0.001,-0.5229 -1.062,-0.31635 0.002,-0.5773 -0.539,-0.33045 2.093,-0.21561 0.589,0.83723 0.179,-1.90921 0.874,-0.0675 0.563,0.81809 -0.836,0.84932 0.119,1.21806 -0.921,0.73749 0.45,0.95007 -1.218,0.61054 0.255,0.63271 0.685,0.2287 1.045,-0.33146 0,0 0.376,0.2015 0,0 -0.114,-0.38285 0,0 0.827,-0.36472 0.385,1.08206 1.289,-0.15617 -0.152,-0.50576 1.4,0.0474 1.173,1.39236 0.607,-1.53643 0.786,0.54909 -0.305,0.12795 0.59,-0.12292 -0.228,-1.41553 1.254,-1.68353 -0.333,-0.85939 0.49,-1.44072 0.78,0.0403 0.173,1.15157 -0.035,-1.09515 0.355,-0.20654 1.283,1.14351 0.816,-0.24281 0.17,0.537 -0.784,0.0615 1.734,0.76066 0.5,-0.7385 -0.727,-0.70222 0.472,-0.35263 0.612,0.2015 -0.316,-1.00548 1.19,-0.2015 0.322,0.63674 0.779,0.19948 -0.562,0.53901 0.19,0.83824 0.325,-0.51987 0.318,0.44935 -0.798,0.54304 0.221,0.44128 1.137,-0.43927 0.486,0.83219 1.057,-0.11384 1.189,0.89264 0.841,-0.21359 1.188,0.61457 0.259,-0.38889 0.284,1.82055 -0.327,0.8876 1.313,1.43165 0.957,-0.46445 2.247,1.35105 0.988,0 0.765,-0.74555 -0.355,0.45942 0.638,0.53498 -0.421,-0.0191 -0.345,0.98735 0.856,0.25187 -0.299,-0.54002 0.488,0.007 -0.039,-0.35364 0.364,0.29218 0.111,-0.49367 -0.287,2.44922 0.484,0.0816 0.216,-0.46748 0.692,0.37882 -0.052,1.29866 0.75,-0.23172 1.662,0.59845 -0.158,-1.98477 0.643,-0.51785 0.346,0.65386 1.457,-0.0101 0.226,0.60953 2.694,-1.11832 0.795,0.57025 -0.016,0.72539 1.415,-0.0322 -0.056,1.05788 0.759,0.001 0.093,1.08608 -1.146,0.25792 -0.701,-0.33952 0.065,0.98835 0.438,0.31233 -0.616,2.64065 1.118,0.27907 0.075,1.8548 -0.298,1.29564 -0.48,0.29621 -0.138,1.93742 -1.037,-0.44733 -0.282,0.54405 1.068,1.24123 1.211,0.0665 -0.508,1.29765 1.158,0.37278 0.219,0.96619 0,0 2.743,1.99988 3.095,-0.0524 2.154,-0.98533 0.555,-1.56666 1.256,-0.77779 0.272,-1.14049 0.722,-0.65285 0,0 1.64,-3.78517 -0.544,-1.11832 1.58,-1.15459 -0.45,-0.8997 -0.623,-0.11183 -0.391,-1.08205 0.243,-1.04981 2.201,-0.59543 0,0 0.904,-2.28702 -0.918,-0.58838 0.339,-0.68006 -0.69,-0.56823 -0.019,-0.7395 -0.559,0.10377 -1.389,-1.17575 0.075,-1.1294 -0.762,-0.86746 -0.212,-3.23507 -0.538,-0.15818 0.821,-2.47542 -0.461,-1.32486 0.299,-0.40703 0.808,-0.18739 0.441,-0.97929 1.068,-0.0625 1.657,-1.52334 0.517,0.21964 1.219,-0.49569 0.583,-0.89264 0.811,-0.0766 -0.288,-0.16523 0.405,-0.41106 0.197,0.23072 0.596,-0.56723 0.616,0.52693 0.785,-0.53599 -0.105,-0.47856 0.921,-0.12292 -0.589,-0.67401 0.857,-0.18135 1.379,-1.97067 3.338,-1.83767 -0.143,-1.35206 0.518,-0.57629 1.126,-0.24684 0.965,0.64178 0.18,0.78585 1.731,0.1884 -0.042,-0.3627 0.733,0.1209 0.266,-1.69159 1.019,-0.0957 0.458,1.14552 0.982,-0.34859 0.829,0.85234 0.758,-0.15112 0.237,-0.98131 0.437,0.20452 0.07,-1.21907 1.569,0.1884 -0.629,-0.7526 0.412,-0.7788 -1.334,-1.01152 -0.618,0.0735 0.035,-1.01152 -2.205,-0.34255 -0.314,-0.90776 -1.192,-0.65285 -1.152,0.28814 -1.979,-1.2503 -0.745,0.21157 0.022,-0.7929 -1.595,-1.65935 -0.879,-0.0735 -0.647,-1.06191 -0.139,-2.23362 1.42,0.45539 0.704,-0.95208 0.97,0.37479 0.468,-1.66439 -0.216,-1.33292 -2.079,-0.24583 -1.279,-1.49814 -0.607,0.32441 -1.667,-0.36673 -0.002,-1.58983 1.263,0.22266 0.243,-0.54707 1.541,-0.27102 0.727,-1.31579 -0.015,-1.01556 3.986,1.0206 2.977,-0.65286 -0.255,-1.03369 -1.603,-0.30628 -0.578,-1.62006 -1.061,0.56319 -0.28,-0.24079 -0.196,-0.41207 0.579,-1.21302 -0.234,-1.2634 -0.667,-0.2015 -0.844,0.85738 -0.78,-0.49771 0.192,-0.74957 -0.842,-0.31132 -0.221,0.55614 -0.796,-0.34154 -0.091,-0.94403 -0.477,-0.2559 0.455,-0.45338 -0.122,-1.94749 -1.048,-0.56319 0.627,-0.63371 -1.702,0.0584 0.824,-2.53285 -0.508,-0.81607 -1.183,-0.57629 0.58,-1.05585 -0.188,-0.49972 -1.299,0.33348 -0.538,-0.27202 0.619,-0.66697 0,0 -5.062,-2.79882 -4.726,-0.23777 0.273,0.51986 -0.359,0.52894 0.52,0.53397 -1.056,1.64222 -1.139,0.27807 -2.441,-2.90058 -3.226,0.12392 -1.673,-0.45035 -0.514,-0.78182 -4.074,-0.0524 0.437,-1.97671 -0.924,-1.8548 -0.08,-1.34501 -5.426,1.0206 -5.035,-3.89599 -1.779,-0.51886 -1.163,-1.38934 -2.084,-0.12896 -0.881,1.64121 -0.862,0.0594 -3.827,-3.07185 -1.635,-0.35464 -3.05,-1.92735 0.117,-0.84629 -0.839,-1.0478 -1.44,-0.35061 -0.08,0.82514 -1.117,0.20956 0.208,-0.35162 -0.541,-0.44632 0.401,-0.0423 -0.012,-0.67704 -1.84,-2.18425 -0.463,-1.70771 -2.739,-0.57931 -0.941,-0.67905 -0.366,-0.9138 -0.8,0.41206 -1.357,-0.79693 -0.121,-0.7123 -0.684,-0.29016 -0.217,0.4836 -1.602,-0.83118 -0.442,-0.98534 -1.626,-0.51382 -0.473,-1.30874 -1.174,0.0625 -0.897,-1.16265 -1.366,0.54001 0.561,2.19433 -0.265,0.51786 -1.392,-1.84171 -1.924,-0.19646 -0.888,-1.50923 -1.268,-0.6982 -0.118,-0.68207 -0.723,0.0605 -2.05,-1.75808 -0.993,-0.0242 0,0 z"
          />

          {/* Add more major states here... For brevity, I'll add a few more key states */}
          
          {/* Gujarat */}
          <path
            id="IN-GJ"
            title="Gujarat"
            fill={getStateColor('IN-GJ')}
            stroke="#ffffff"
            strokeWidth="1.5"
            className="state-path cursor-pointer hover:opacity-80 transition-all duration-200"
            onClick={() => handleStateClick('IN-GJ')}
            onMouseEnter={(e) => handleStateMouseEnter('IN-GJ', e)}
            onMouseLeave={handleStateMouseLeave}
            d="m 30.331,219.36447 1.069,0.35564 0.444,-1.01354 1.45,0.24281 0.804,1.16365 0.756,-0.17429 0.521,0.80499 2.409,0.94906 1.951,-0.27202 1.179,-0.72742 0.159,0.49065 0.379,-0.31031 0.53,0.6579 0.943,-0.0222 1.12,1.42863 0.817,-0.20453 0.925,0.38991 -0.214,0.79995 1.157,-0.51383 0.261,1.73894 -0.545,0.85436 0.245,-0.19344 0.139,0.73548 0.473,-0.0161 0.845,1.13343 -0.261,1.10724 1.639,0.26396 -0.199,0.64782 -0.637,-0.0161 -0.21,1.29061 1.193,0.41509 -0.379,0.23071 0.229,0.44632 -0.686,0.0957 -0.215,0.92488 -0.342,-0.35565 -0.632,0.48259 0.419,0.79794 -0.767,-0.0322 -0.115,0.8604 -0.786,0.0464 0.488,0.94704 -1.215,0.36976 1.267,1.33997 -1.232,1.04679 -0.309,2.04421 -1.113,0.78585 0.132,1.05787 -0.755,0.22769 0.32,1.42964 -1.06,-0.72137 -0.26,0.27807 0.49,0.0695 -0.037,0.36874 -1.543,1.17172 1.351,1.73693 -0.128,1.16164 -2.683,0.70827 -0.595,0.66193 -0.837,-0.54506 -0.575,0.57629 -1.987,-0.41711 -0.65,0.70424 -0.542,-0.27706 -0.432,0.72036 0.252,1.28456 -0.907,0.67905 -0.624,-0.15011 -0.362,1.2503 -0.728,0.60853 0.749,0.88458 -0.487,0.59644 0.777,0.30225 0.197,1.20396 0.905,0.65588 -0.26,0.5239 1.279,0.6055 -0.589,0.36069 0.515,0.57225 -0.996,-0.0403 -1.415,0.9672 -0.005,2.06537 -3.394,2.72427 -0.033,0.57025 0.946,1.01757 0.238,1.5183 1.007,1.85278 -0.2,2.5127 -0.82,0.81607 1.044,1.07399 -0.057,0.66394 1.969,1.41856 -0.732,1.29262 1.123,1.24426 1.154,-0.50879 1.478,-2.21548 1.53,0.84932 1.898,2.57717 0.623,0.24382 0.698,-0.44532 0.286,0.33449 0.301,-0.44229 0.658,1.8004 0.457,-0.69114 1.368,-0.29419 0.605,-1.79839 1.237,-1.20597 0.367,-2.02003 -1.587,-0.58636 0.11,-0.78484 0.354,0.37579 0.746,-0.28713 -1.772,-3.29049 -2.195,1.075 -0.574,-0.27404 -0.197,-1.26945 0.677,-1.01958 -0.164,-2.09761 0.335,-0.46244 -0.337,-1.07198 -2.011,-0.94805"
          />

        </svg>

        {/* Tooltip */}
        {tooltip.visible && hoveredState && (
          <div
            className="absolute z-50 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-lg pointer-events-none"
            style={{
              left: tooltip.x,
              top: tooltip.y,
              transform: 'translate(-50%, -100%)',
              marginTop: '-10px'
            }}
          >
            {indiaStatesData[hoveredState as keyof typeof indiaStatesData]?.name}
          </div>
        )}
      </div>

      {/* Instructions */}
      <div className="text-center mt-8 max-w-2xl mx-auto">
        <p className="text-lg text-stone-600 mb-4">
          🎭 Discover the artistic heritage of each Indian state
        </p>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-stone-500">
          <div className="flex items-center justify-center gap-2">
            <div className="w-4 h-4 bg-orange-200 rounded"></div>
            <span>Hover to preview</span>
          </div>
          <div className="flex items-center justify-center gap-2">
            <div className="w-4 h-4 bg-orange-400 rounded"></div>
            <span>Click to explore</span>
          </div>
          <div className="flex items-center justify-center gap-2">
            <span>🎨</span>
            <span>Rich art forms</span>
          </div>
          <div className="flex items-center justify-center gap-2">
            <span>📚</span>
            <span>Cultural stories</span>
          </div>
        </div>
      </div>

      {/* Modal for State Details */}
      {selectedState && selectedStateData && (
        <div className="state-modal" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            {/* Header */}
            <div className="modal-header">
              <h2>{selectedStateData.name}</h2>
              <div className="capital">Capital: {selectedStateData.capital}</div>
              <button 
                className="close-button"
                onClick={closeModal}
                aria-label="Close"
              >
                ×
              </button>
            </div>
            
            <div className="decorative-border"></div>

            {/* Body */}
            <div className="modal-body">
              {/* State Story */}
              <div className="state-story">
                <h3 className="text-xl font-bold mb-3 text-orange-700">📖 Cultural Heritage</h3>
                <p>{selectedStateData.story}</p>
              </div>

              {/* Art Forms */}
              <div>
                <h3 className="text-2xl font-bold mb-6 text-center text-orange-700">
                  🎨 Traditional Art Forms
                </h3>
                <div className="artforms-grid">
                  {selectedStateData.artforms.map((artform, index) => (
                    <div key={index} className="artform-card">
                      <img 
                        src={artform.image} 
                        alt={artform.name}
                        className="artform-image"
                        onError={(e) => {
                          (e.target as HTMLImageElement).src = 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=300&fit=crop';
                        }}
                      />
                      <div className="artform-content">
                        <h4 className="artform-name">{artform.name}</h4>
                        <p className="artform-description">{artform.description}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Additional Info */}
              <div className="mt-8 p-6 bg-gradient-to-r from-orange-100 to-yellow-100 rounded-xl">
                <h4 className="font-bold text-lg mb-3 text-orange-800">
                  🛍️ Support Local Artists
                </h4>
                <p className="text-stone-700 mb-4">
                  Discover and purchase authentic {selectedStateData.name} art pieces in our marketplace. 
                  Every purchase directly supports local artisans and helps preserve these traditional crafts.
                </p>
                <div className="flex gap-3">
                  <button 
                    className="px-6 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                    onClick={() => {
                      closeModal();
                      // Navigate to marketplace with state filter
                      window.location.href = `/marketplace?state=${selectedState}`;
                    }}
                  >
                    Browse {selectedStateData.name} Art
                  </button>
                  <button 
                    className="px-6 py-2 border border-orange-500 text-orange-500 rounded-lg hover:bg-orange-50 transition-colors"
                    onClick={closeModal}
                  >
                    Continue Exploring
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default IndiaMap;
